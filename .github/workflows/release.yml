name: Release Build

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 25
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'

    - name: Install pnpm (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # Use PowerShell for reliable global install on Windows
        npm install -g pnpm --loglevel=error
        pnpm -v
      shell: pwsh

    - name: Install pnpm (macOS)
      if: matrix.os == 'macos-latest'
      run: npm install -g pnpm

    - name: Install dependencies
      working-directory: frontend
      run: pnpm install --frozen-lockfile

    - name: Build project
      run: |
        echo "Building for ${{ matrix.os }}..."
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          bash scripts/build-windows.sh
        else
          bash scripts/build-macos.sh
        fi

    - name: Zip binaries
      run: |
        cd bin
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          zip -r LoveCalc-Windows-${{ github.sha }}.zip *.exe
        else
          zip -r LoveCalc-MacOS-${{ github.sha }}.zip *.app
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries-${{ matrix.os }}
        path: bin/*.zip

  create-release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        name: LoveCalc ${{ github.ref_name }}
        body: |
          ## Build Information
          - Commit: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
          - Build date: ${{ steps.date.outputs.date }}
          - Build runner: ${{ matrix.os }}
        files: |
          artifacts/**/*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
